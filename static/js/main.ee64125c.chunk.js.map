{"version":3,"sources":["api.ts","context/TodosContext.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodosContext","React","createContext","todos","setTodos","loading","setLoading","modal","setModal","filter","select","input","submit","setFilter","visibleTodos","user","id","name","email","phone","setUser","userTodo","title","completed","userId","setUserTodo","loadingModal","setLoadingModal","TodosProvider","children","useState","useMemo","todo","matchesFilterSelect","matchesFilterInput","toLowerCase","includes","trim","useEffect","finally","value","Provider","TodoFilter","useContext","selectInp","setSelectInp","change","setChange","appliedValue","setAppliedValue","prevState","handleDebouncedChange","debounce","inputValue","className","onChange","event","target","type","placeholder","style","pointerEvents","onClick","TodoList","setSelect","map","classNames","handliClick","Loader","TodoModal","href","TodoApp","App","ReactDOM","render","document","getElementById"],"mappings":"sOAcA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,I,OClBMC,EAAeC,IAAMC,cAgB/B,CACDC,MAAO,GACPC,SAAU,aACVC,SAAS,EACTC,WAAY,aACZC,OAAO,EACPC,SAAU,aACVC,OAAQ,CACNC,OAAQ,MACRC,MAAO,GACPC,QAAQ,GAEVC,UAAW,aACXC,aAAc,GACdC,KAAM,CACJC,GAAI,EACJC,KAAM,GACNC,MAAO,GACPC,MAAO,IAETC,QAAS,aACTC,SAAU,CACRL,GAAI,EACJM,MAAO,GACPC,WAAW,EACXC,OAAQ,GAEVC,YAAa,kBAAM,MACnBC,cAAc,EACdC,gBAAiB,eAONC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAA0BC,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAcC,EAAd,KACA,EAA8B0B,oBAAkB,GAAhD,mBAAOzB,EAAP,KAAgBC,EAAhB,KACA,EAA0BwB,oBAAkB,GAA5C,mBAAOvB,EAAP,KAAcC,EAAd,KACA,EAA4BsB,mBAAS,CACnCpB,OAAQ,MACRC,MAAO,GACPC,QAAQ,IAHV,mBAAOH,EAAP,KAAeI,EAAf,KAKA,EAAwBiB,mBAAe,CACrCd,GAAI,EACJC,KAAM,GACNC,MAAO,GACPC,MAAO,KAJT,mBAAOJ,EAAP,KAAaK,EAAb,KAMA,EAAgCU,mBAAe,CAC7Cd,GAAI,EACJM,MAAO,GACPC,WAAW,EACXC,OAAQ,IAJV,mBAAOH,EAAP,KAAiBI,EAAjB,KAMA,EAAwCK,oBAAkB,GAA1D,mBAAOJ,EAAP,KAAqBC,EAArB,KAEMb,EAAeiB,mBAAQ,WAC3B,OAAO5B,EAAMM,QAAO,SAAAuB,GAClB,IAAMC,EACgB,QAAlBxB,EAAOC,QACa,WAAlBD,EAAOC,SAAwBsB,EAAKT,WAClB,cAAlBd,EAAOC,QAA0BsB,EAAKT,UAEtCW,EAAqBF,EAAKV,MAC7Ba,cACAC,SAAS3B,EAAOE,MAAMwB,cAAcE,QAEvC,OAAOJ,GAAuBC,OAE/B,CAAC/B,EAAOM,IAEX6B,qBAAU,WDxEkBjD,EAAY,UC0EnCO,KAAKQ,GACLmC,SAAQ,kBAAMjC,GAAW,QAC3B,IAEHgC,qBAAU,WD5EW,IAACd,EC6EH,OAAbH,GD7EgBG,EC8EVH,EAASL,GD9EoB3B,EAAG,iBAAiBmC,KC+EtD5B,KAAKwB,GACLmB,SAAQ,kBAAMjC,GAAW,OAE5Bc,EAAQ,CACNJ,GAAI,EACJC,KAAM,GACNC,MAAO,GACPC,MAAO,KAETb,GAAW,MAEZ,CAACe,IAEJ,IAAMmB,EAAQT,mBAAQ,WACpB,MAAO,CACL5B,QACAC,WACAC,UACAC,aACAG,SACAI,YACAC,eACAP,QACAC,WACAO,OACAK,UACAM,eACAC,kBACAN,WACAI,iBAED,CACDtB,EACAC,EACAC,EACAC,EACAG,EACAI,EACAC,EACAP,EACAC,EACAO,EACAK,EACAM,EACAC,EACAN,EACAI,IAGF,OACE,cAACzB,EAAayC,SAAd,CAAuBD,MAAOA,EAA9B,SACGX,K,uBCpJMa,EAAa,WACxB,IAAQ7B,EAAc8B,qBAAW3C,GAAzBa,UAER,EAAkCiB,mBAAS,OAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAA4Bf,mBAAS,IAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAAwCjB,mBAAS,IAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KAEAX,qBAAU,WACRzB,GAAU,SAACqC,GAAD,mBAAC,eACNA,GADK,IAERxC,OAAQkC,EACRjC,MAAOqC,SAER,CAACJ,EAAWI,EAAcnC,IAE7B,IAAMsC,EAAwBC,KAAS,SAACC,GACtCJ,EAAgBI,KACf,KAmBH,OACE,uBAAMC,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRC,SAAU,SAACC,GAAD,OAAWX,EAAaW,EAAMC,OAAOjB,QAC/CA,MAAOI,EAHT,UAKE,wBAAQJ,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGc,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRI,KAAK,OACLJ,UAAU,QACVK,YAAY,YACZJ,SAvCa,SAACC,GACpB,IAAMH,EAAaG,EAAMC,OAAOjB,MAEhCO,EAAUM,GAEVF,EAAsBE,IAmChBb,MAAOM,IAET,sBAAMQ,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBM,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRH,KAAK,SACLJ,UAAU,SACVQ,QA5CW,WACnBf,EAAU,IAEVlC,GAAU,SAACqC,GAAD,mBAAC,eACNA,GADK,IAERvC,MAAO,oB,gBClCAoD,EAAqB,WAChC,MAEIpB,qBAAW3C,GADbc,EADF,EACEA,aAAcN,EADhB,EACgBA,SAAUiB,EAD1B,EAC0BA,YAAalB,EADvC,EACuCA,MAEvC,EAA4BuB,mBAAwB,MAApD,mBAAOpB,EAAP,KAAesD,EAAf,KAEA1B,qBAAU,WACJ/B,GAIJyD,EAAU,QACT,CAACzD,EAAOC,IAQX,OACE,wBAAO8C,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAGJ,gCACGxC,EAAamD,KAAI,SAACjC,GAAD,OAChB,qBAAI,UAAQ,OAAOsB,UAAU,GAA7B,UACE,oBAAIA,UAAU,eAAd,SAA8BtB,EAAKhB,KACnC,oBAAIsC,UAAU,eAAd,SACGtB,EAAKT,WACJ,sBAAM+B,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAEEA,UAAWY,IAAW,CACpB,mBAAoBlC,EAAKT,UACzB,mBAAoBS,EAAKT,YAJ7B,SAOGS,EAAKV,UAGV,oBAAIgC,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVI,KAAK,SACLI,QAAS,kBA/CH,SAAC9B,GACnBgC,EAAUhC,EAAKhB,IACfR,GAAS,GACTiB,EAAY,eAAKO,IA4CUmC,CAAYnC,IAJ7B,SAME,sBAAMsB,UAAU,OAAhB,SACE,mBAEEA,UAAWY,IAAW,CACpB,aAAcxD,IAAWsB,EAAKhB,GAC9B,mBAAoBN,IAAWsB,EAAKhB,eAhCXgB,EAAKhB,aCvCvCoD,G,MAAmB,kBAC9B,qBAAKd,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCDNe,EAAsB,WACjC,MAEI1B,qBAAW3C,GADb0B,EADF,EACEA,aAAcX,EADhB,EACgBA,KAAMM,EADtB,EACsBA,SAAUb,EADhC,EACgCA,SAOhC,OACE,sBAAK8C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEd5B,EACC,cAAC,EAAD,IAEA,sBAAK4B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYjC,EAASL,MAIrB,wBACE0C,KAAK,SACLJ,UAAU,SACV,UAAQ,cACRQ,QAzBQ,WAClBtD,GAAS,SA4BH,sBAAK8C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGjC,EAASC,QAGZ,oBAAGgC,UAAU,QAAQ,UAAQ,aAA7B,UACGjC,EAASE,UACN,wBAAQ+B,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBACH,OAED,mBAAGgB,KAAI,iBAAYvD,EAAKG,OAAxB,SACGH,EAAKE,oBC3CTsD,EAAoB,WAC/B,MAA2B5B,qBAAW3C,GAA9BK,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAEjB,OACE,qCACE,qBAAK+C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACGjD,EACG,cAAC,EAAD,IACA,cAAC,EAAD,aAKXE,GAAS,cAAC,EAAD,QCrBHiE,EAAgB,WAC3B,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCRNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee64125c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport { getTodos, getUser } from '../api';\nimport { Filter } from '../types/Filter';\nimport { User } from '../types/User';\n\nexport const TodosContext = React.createContext<{\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  loading: boolean;\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  modal: boolean;\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\n  filter: Filter;\n  setFilter: React.Dispatch<React.SetStateAction<Filter>>;\n  visibleTodos: Todo[];\n  user: User;\n  setUser: React.Dispatch<React.SetStateAction<User>>;\n  userTodo: Todo;\n  setUserTodo: React.Dispatch<React.SetStateAction<Todo>>;\n  loadingModal: boolean;\n  setLoadingModal: React.Dispatch<React.SetStateAction<boolean>>;\n}>({\n  todos: [],\n  setTodos: () => { },\n  loading: true,\n  setLoading: () => { },\n  modal: true,\n  setModal: () => { },\n  filter: {\n    select: 'all',\n    input: '',\n    submit: false,\n  },\n  setFilter: () => { },\n  visibleTodos: [],\n  user: {\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  },\n  setUser: () => { },\n  userTodo: {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  },\n  setUserTodo: () => null,\n  loadingModal: false,\n  setLoadingModal: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [modal, setModal] = useState<boolean>(false);\n  const [filter, setFilter] = useState({\n    select: 'all',\n    input: '',\n    submit: false,\n  });\n  const [user, setUser] = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [userTodo, setUserTodo] = useState<Todo>({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n  const [loadingModal, setLoadingModal] = useState<boolean>(false);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const matchesFilterSelect\n        = filter.select === 'all'\n        || (filter.select === 'active' && !todo.completed)\n        || (filter.select === 'completed' && todo.completed);\n\n      const matchesFilterInput = todo.title\n        .toLowerCase()\n        .includes(filter.input.toLowerCase().trim());\n\n      return matchesFilterSelect && matchesFilterInput;\n    });\n  }, [todos, filter]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (userTodo !== null) {\n      getUser(userTodo.id)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    } else {\n      setUser({\n        id: 0,\n        name: '',\n        email: '',\n        phone: '',\n      });\n      setLoading(false);\n    }\n  }, [userTodo]);\n\n  const value = useMemo(() => {\n    return {\n      todos,\n      setTodos,\n      loading,\n      setLoading,\n      filter,\n      setFilter,\n      visibleTodos,\n      modal,\n      setModal,\n      user,\n      setUser,\n      loadingModal,\n      setLoadingModal,\n      userTodo,\n      setUserTodo,\n    };\n  }, [\n    todos,\n    setTodos,\n    loading,\n    setLoading,\n    filter,\n    setFilter,\n    visibleTodos,\n    modal,\n    setModal,\n    user,\n    setUser,\n    loadingModal,\n    setLoadingModal,\n    userTodo,\n    setUserTodo,\n  ]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import debounce from 'lodash.debounce';\nimport {\n  useContext, useEffect, useState,\n} from 'react';\n\nimport { TodosContext } from '../../context/TodosContext';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter = () => {\n  const { setFilter } = useContext(TodosContext);\n\n  const [selectInp, setSelectInp] = useState('all');\n  const [change, setChange] = useState('');\n  const [appliedValue, setAppliedValue] = useState('');\n\n  useEffect(() => {\n    setFilter((prevState: Filter) => ({\n      ...prevState,\n      select: selectInp,\n      input: appliedValue,\n    }));\n  }, [selectInp, appliedValue, setFilter]);\n\n  const handleDebouncedChange = debounce((inputValue: string) => {\n    setAppliedValue(inputValue);\n  }, 1000);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n\n    setChange(inputValue);\n\n    handleDebouncedChange(inputValue);\n  };\n\n  const handleDelite = () => {\n    setChange('');\n\n    setFilter((prevState: Filter) => ({\n      ...prevState,\n      input: '',\n    }));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setSelectInp(event.target.value)}\n            value={selectInp}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleChange}\n          value={change}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleDelite}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { TodosContext } from '../../context/TodosContext';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const {\n    visibleTodos, setModal, setUserTodo, modal,\n  } = useContext(TodosContext);\n  const [select, setSelect] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (modal) {\n      return;\n    }\n\n    setSelect(null);\n  }, [modal, setModal]);\n\n  const handliClick = (todo: Todo) => {\n    setSelect(todo.id);\n    setModal(true);\n    setUserTodo({ ...todo });\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {visibleTodos.map((todo: Todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                // className=\"has-text-danger\"\n                className={classNames({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handliClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    // className=\"far fa-eye\"\n                    className={classNames({\n                      'far fa-eye': select !== todo.id,\n                      'far fa-eye-slash': select === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n        {/* <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n        <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">6</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              qui ullam ratione quibusdam voluptatem quia omnis\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">8</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../../context/TodosContext';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    loadingModal, user, userTodo, setModal,\n  } = useContext(TodosContext);\n\n  const handliClick = () => {\n    setModal(false);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${userTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handliClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {userTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {userTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoFilter } from './TodoFilter';\nimport { TodoList } from './TodoList';\nimport { Loader } from './Loader';\nimport { TodosContext } from '../context/TodosContext';\nimport { TodoModal } from './TodoModal';\n\nexport const TodoApp: React.FC = () => {\n  const { loading, modal } = useContext(TodosContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {modal && <TodoModal />}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodosProvider } from './context/TodosContext';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodosProvider>\n      <TodoApp />\n    </TodosProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}